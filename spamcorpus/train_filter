#! /usr/bin/perl
use strict;
use warnings;
use lib('../');
use AI::Categorizer::Learner::NaiveBayes;
use AI::Categorizer::Document;
use AI::Categorizer::KnowledgeSet;
use util::Io;
my %cfg = do 'config.pl';

my $corpus_path = '.';
my @categories = ('ham', 'spam');

my @ai_docs = ();
my @ai_cats = ();
foreach my $cat (@categories) {
    my $ai_cat = new AI::Categorizer::Category(name => $cat);
    push @ai_cats, $ai_cat;
    opendir(DIR, "$corpus_path/$cat") or die "can't opendir $corpus_path/$cat: $!";
    my $file;
    while (defined($file = readdir(DIR))) {
        next if $file =~ /^\.\.?$/; 
        print "adding $file to $cat.\n";
        my $content = readfile("$corpus_path/$cat/$file");
        push @ai_docs, new AI::Categorizer::Document(
            content => $content,
            categories => [$ai_cat]
            );
    }
    closedir(DIR);
}

my $corpus = new AI::Categorizer::KnowledgeSet(
    documents => \@ai_docs,
    categories => \@ai_cats,
    verbose => 1,
    );

## xxx 
# The following could be adjusted with feature selectors etc.
# But first I need to find some suitable training data
# and set up a testing framework to compare the results.

my $learner = new AI::Categorizer::Learner::NaiveBayes(
    verbose => 1,
    threshold => 0.5,
    );

$learner->train(knowledge_set => $corpus);
$learner->save_state('filterstate');
